file := Whitespace& Namespace? (Using|Function|Field|Class|Whitespace)*

Namespace := Whitespace& $NamespaceKeyword NamespaceIdentifier Whitespace& $Semicolon
Using := Whitespace& $UsingKeyword NamespaceIdentifier Whitespace& $Semicolon
Function := FunctionModifier* Type Whitespace& $Identifier Whitespace& $OpenBrace ParameterList? Whitespace& $CloseBrace Whitespace& $Semicolon|Code
Field := $ConstKeyword Type Whitespace& $Identifier Whitespace& $AssignOperator Expression Whitespace& $Semicolon
Field := Type Whitespace& $Identifier Whitespace& $Semicolon
Class := $ClassKeyword Whitespace& $Identifier Whitespace& $OpenBrace ClassElement* Whitespace& $CloseBrace


WhitespaceElement inline := $Whitespace|$Comment
Whitespace := WhitespaceElement WhitespaceElement*

PostExpression inline := ($OpenBrace Whitespace& Expression Whitespace& $CloseBrace)|String|Null|Integer|Boolean|Accessor

Integer := $Integer

CastOperator := $OpenBrace Type $HardCastIndicatorOperator? Whitespace& $CloseBrace
CastExpression := CastOperator Whitespace& CastExpression
CastExpression inline := PostExpression

MultiplicativeExpression merge := Whitespace& CastExpression (Whitespace& $MultiplyOperator|$DivideOperator|$ModuloOperator MultiplicativeExpression)?
AdditiveExpression merge := Whitespace& MultiplicativeExpression (Whitespace& $AddOperator|$SubtractOperator AdditiveExpression)?
CompareExpression merge := Whitespace& AdditiveExpression (Whitespace& $LessEqualThanOperator|$LessThanOperator|$GreaterEqualThanOperator|$GreaterThanOperator CompareExpression)?
EqualsExpression merge := Whitespace& CompareExpression (Whitespace& $EqualOperator|$NotEqualOperator EqualsExpression)?
ShiftExpression merge := Whitespace& EqualsExpression (Whitespace& $ShiftLeftOperator|$ShiftRightOperator ShiftExpression)?
InclusiveOrExpression merge := Whitespace& ShiftExpression (Whitespace& $InclusiveOrOperator InclusiveOrExpression)?
InclusiveAndExpression merge := Whitespace& InclusiveOrExpression (Whitespace& $AndOperator InclusiveAndExpression)?

Expression := InclusiveAndExpression

Argument := Expression
ArgumentList := Argument (Whitespace& $CommaOperator Whitespace& Argument)*
FunctionInvocation := Whitespace& $OpenBrace ArgumentList? Whitespace& $CloseBrace

FunctionInvocationAccessor := Whitespace& $Identifier FunctionInvocation
FunctionInvocationAccessor inline := Whitespace& $Identifier

ArrayAccessor := Whitespace& $OpenBracket Expression Whitespace& $CloseBracket
AccessorElement := Whitespace& $AccessorOperator FunctionInvocationAccessor
AccessorElement := ArrayAccessor

Accessor := FunctionInvocationAccessor AccessorElement*
String := $String
Boolean := $TrueKeyword|$FalseKeyword
Null := $NullKeyword

ArrayCharacters := $OpenBracket $CloseBracket

Type := (Whitespace& $Identifier Whitespace& $AccessorOperator)* Whitespace& $Identifier ArrayCharacters*
Type := Whitespace& $BoolKeyword ArrayCharacters*
Type := Whitespace& $VoidKeyword
NamespaceIdentifier := Whitespace& $Identifier ($AccessorOperator $Identifier)*

Parameter := Type Whitespace& $Identifier
ParameterList := Whitespace& Parameter (Whitespace& $CommaOperator Parameter)*

FunctionModifier := Whitespace& $NativeKeyword

ReturnStatement := $ReturnKeyword Expression? Whitespace& $Semicolon
BreakStatement := $BreakKeyword Whitespace& $Semicolon
ContinueStatement := $ContinueKeyword Whitespace& $Semicolon
AssignmentStatement := Accessor Whitespace& $AssignOperator Expression Whitespace& $Semicolon
CreateAssignmentStatement := Type Whitespace& $Identifier Whitespace& $AssignOperator Expression Whitespace& $Semicolon
IfStatement := $IfKeyword Whitespace& $OpenBrace Expression Whitespace& $CloseBrace Code (Whitespace& ElseStatement)?
ElseStatement := $ElseKeyword Code
WhileStatement := $WhileKeyword Whitespace& $OpenBrace Expression Whitespace& $CloseBrace Code
AccessorStatement := Accessor Whitespace& $Semicolon

Statement := Whitespace& ReturnStatement|BreakStatement|ContinueStatement|AssignmentStatement|CreateAssignmentStatement|IfStatement|WhileStatement|AccessorStatement

Code := Whitespace& ($OpenBrace Statement* Whitespace& $CloseBrace)|($LineCodeChars Statement)

ClassField := Type Whitespace& $Identifier Whitespace& $Semicolon
ClassMethod := FunctionModifier* Type Whitespace& $Identifier Whitespace& $OpenBrace ParameterList? Whitespace& $CloseBrace Whitespace& $Semicolon|Code

ClassElement inline := Whitespace& ClassMethod|ClassField