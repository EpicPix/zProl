// Definitions of stuff in this language

// Keywords
keyword definition using
keyword definition namespace
keyword control return

// Types, also defined as keywords
type void size=0 V

type int8 size=1 B
type byte size=1 B
type int16 size=2 S
type short size=2 S
type int32 size=4 I
type int size=4 I
type int64 size=8 L
type long size=8 L

type uint8 unsigned,size=1 uB
type ubyte unsigned,size=1 uB
type uint16 unsigned,size=2 uS
type ushort unsigned,size=2 uS
type uint32 unsigned,size=4 uI
type uint unsigned,size=4 uI
type uint64 unsigned,size=8 uL
type ulong unsigned,size=8 uL

type pointer unsigned,size=8,pointer P


define parameter @type@ @word@
define parameterc @type@ @word@ ,
define callparameter @equation@
define callparameterc @equation@ ,

ghost Open {
ghost Close }

tok !InDefinition FunctionEmpty @type@ @word@ ( )
tok !InDefinition FunctionParameters @type@ @word@ ( ^parameter )
tok !InDefinition FunctionParameters @type@ @word@ ( ^+parameterc ^parameter )

tok !InDefinition Using using @dword@ ;
tok !InDefinition Namespace namespace @dword@ ;

tok InDefinition Return return ;
tok InDefinition ReturnValue return @equation@ ;

tok InDefinition Call @word@ ( ) ;
tok InDefinition Call @word@ ( ^callparameter ) ;
tok InDefinition Call @word@ ( ^+callparameterc ^callparameter ) ;

context on Open push InDefinition
context on Close pop InDefinition