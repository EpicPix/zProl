// Definitions of stuff in this language

// Keywords
keyword using
keyword namespace
keyword typedef

// Types
type void false 0 false
type int8 false 1 false
type int16 false 2 false
type int32 false 4 false
type int64 false 8 false
type uint8 true 1 false
type uint16 true 2 false
type uint32 true 4 false
type uint64 true 8 false
type pointer true 8 true

define parameter @type@ @word@
define parameterc @type@ @word@ ,
define callparameter @equation@
define callparameterc @equation@ ,

ghost Open {
ghost Close }

tok !InDefinition Typedef typedef @type@ @word@ ;

tok !InDefinition FunctionEmpty @type@ @word@ ( )
tok !InDefinition FunctionParameters @type@ @word@ ( ^parameter )
tok !InDefinition FunctionParameters @type@ @word@ ( ^+parameterc ^parameter )

tok !InDefinition Using using @dword@ ;
tok !InDefinition Namespace namespace @dword@ ;

tok InDefinition Return return ;
tok InDefinition ReturnValue return @equation@ ;

tok InDefinition Call @word@ ( ) ;
tok InDefinition Call @word@ ( ^callparameter ) ;
tok InDefinition Call @word@ ( ^+callparameterc ^callparameter ) ;

context on Open push InDefinition
context on Close pop InDefinition